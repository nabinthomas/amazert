Google Given sample on how to create a websocket app and deploy it through the virtual terminal from webbroser itself.
------------------------------------------------------------------------------------------------------------------------

1)https://cloud.google.com
2)Goto Console
3)New project 
4)projectname = amaze1 
5)Just below ProjectID can be Edited to "amaze1-id" //This ID is important 
6)Select AppEngine from Left hand Side pannel 
7) Open Cloud Shell by clicking the ">_"  Icon on top -right side , just on the left side of your profile ICON
   This will open a virtual terminal   
8)git clone https://github.com/GoogleCloudPlatform/python-docs-samples
9)cd  python-docs-samples/appengine/flexible/websockets 
	(copy the following files from 'websockets' in our code base amazert\Learn\Websockets\AppEngine\websockets and replace in thisfolder )
		main.py
		requirements.txt
		key.json ( thake this from https://drive.google.com/file/d/1ycigZb0-5mg3g3o4DXkwQvlehiHEdSdV/view?usp=sharing)
10)gcloud app create
11)gcloud app deploy app.yaml --project amaze1-id


Creating websocket app using SDK.(steps 1-6 same )
---------------------------------------------------
1)https://cloud.google.com
2)Goto Console
3)New project 
4)projectname = amaze1 
5)Just below ProjectID can be Edited to "amaze1-id"
6)Select AppEngine from Left hand Side pannel 
7)Click On CreateEngine 
8)Select Language Python , Environment Flexible
9)DownLoad the cloud SDK 
10)Go to the console of the SDK
11) First Time OR/Not First Time and want to chnage to another project 
	gcloud init
	select the cloud project to be used (amaze1-id)
12)git clone https://github.com/GoogleCloudPlatform/python-docs-samples
13)cd  python-docs-samples/appengine/flexible/websockets
14)	(copy the following files from 'websockets' in our code base amazert\Learn\Websockets\AppEngine\websockets and replace in thisfolder )
		main.py
		requirements.txt
		key.json ( thake this from https://drive.google.com/file/d/1ycigZb0-5mg3g3o4DXkwQvlehiHEdSdV/view?usp=sharing)
15)gcloud app create
16)gcloud app deploy app.yaml --project amaze1-id  

---------------For Testing with out cloud (need to fill out the following) -----------------

10)virtualenv --python python3 ~/envs/hello_world
11)source ~/envs/hello_world/bin/activate

virtualenv --python python3   ~/envs/hello_world
source   ~/envs/hello_world/bin/activate

gunicorn -b 127.0.0.1:8080 -k flask_sockets.worker main:app
gcloud app deploy app.yaml     --project amaze-id1

gcloud config set project amaze-id1
gcloud app logs tail


#global web interface to  test the cloud
http://amaze-id1.wl.r.appspot.com/

# Test messages to test the cloud 

----------------------------------
Device to Cloud Register
----------------------------------
{
   "action":"register",
   "identifier":{
      "registrationId":"8784c5df-f087-4740-b41b-248dc9389a2f",
      "email":"nabin@gmail.com",
      "uid":"_SDFsEfRSDjFCZXCVASEf",
      "deviceId":"532e8c40-18cd-11eb-a4ca-dca6328f80c0"
   },
   "settings":[
      {
         "name":"system.@system[0].hostname",
         "value":"valA"
      },
      {
         "name":"wireless.wifinet0.ssid",
         "value":"valB"
      }
   ]
}


cloud Function to WebSocket 
----------------------
{
   "resource_string":"projects/_/instances/amaze-id1/refs/users/_SDFsEfRSDjFCZXCVASEf/532e8c40-18cd-11eb-a4ca-dca6328f80c0",
   "data":{"settings": {"0": {"value": "valA"}, "1": {"value": "valB"}}}
}

Notify to Device
-------------------
{
    "identifier" : {
      "email": "nabin@gmail.com", 
      "uid": "_SDFsEfRSDjFCZXCVASEf",
      "deviceId": "fb967061-168a-11eb-9272-88e9fe6b97d6"
    },
    "action": "setting",
    "setting" : { "name" : "wireless.wifinet0.ssid", "value" : "PiWRT" }
}



	
